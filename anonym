#!/bin/sh

clear -x
cf='\033[0m'
re='\033[0;31m'
gr='\033[0;32m'
ye='\033[0;33m'
bl='\033[0;34m'
pu='\033[0;35m'
cy='\033[0;36m'
wh='\033[0;37m'

# BackBox Script for Anonym Internet Navigation
#
# This script is intended to set up your BackBox machine to guarantee 
# anonymity through Tor. Additionally, the script takes further steps to 
# prevent data leakage by killing dangerous processes, changing MAC 
# address and IP information and so on.
#
# Author: Raffaele Forte <raffaele@backbox.org>
# Version: 1.7

# The UID under which Tor runs as (varies from system to system)
TOR_UID="debian-tor"

# Tor's TransPort
TRANS_PORT="9040"

# Tor's DNSPort
DNS_PORT="9053"

# Tor's VirtualAddrNetworkIPv4
VIRT_ADDR="10.192.0.0/10"

# LAN destinations that shouldn't be routed through Tor
# Check reserved block.
NON_TOR="127.0.0.0/8 10.0.0.0/8 172.16.0.0/12 192.168.0.0/16"

# Other IANA reserved blocks (These are not processed by tor and dropped by default)
RESV_IANA="0.0.0.0/8 100.64.0.0/10 169.254.0.0/16 192.0.0.0/24 192.0.2.0/24 192.88.99.0/24 198.18.0.0/15 198.51.100.0/24 203.0.113.0/24 224.0.0.0/3"

# List of process names that should be killed, separated by spaces
TO_KILL="chrome dropbox firefox pidgin skype thunderbird xchat"

# List of BleachBit cleaners, separated by spaces
BLEACHBIT_CLEANERS="bash.history system.cache system.clipboard system.custom system.recent_documents system.rotated_logs system.tmp system.trash"

# Overwrite files to hide contents
OVERWRITE="true"

# The default local hostname
REAL_HOSTNAME="ubunknown"



# Include default options, if any
if [ -f /etc/default/ko-anonym ] ; then
	. /etc/default/ko-anonym
fi

# General-purpose Yes/No prompt function
ask() {
	while true; do
		if [ "${2:-}" = "Y" ]; then
			prompt="Y/n"
			default=Y
		elif [ "${2:-}" = "N" ]; then
			prompt="y/N"
			default=N
		else
			prompt="Ok"
			default=OK
		fi
 
		# Ask the question
		echo
		read -p "$1 [$prompt] > " REPLY
 
		# Default?
		if [ -z "$REPLY" ]; then
			REPLY=$default
		fi
 
		# Check if the reply is valid
		case "$REPLY" in
			Y*|y*) return 0 ;;
			N*|n*) return 1 ;;
			O*|o*) return 1 ;;
		esac
	done
}

# Change the local hostname
change_hostname() {
	
	echo

	CURRENT_HOSTNAME=$(hostname)

	clean_dhcp

	RANDOM_HOSTNAME=$(shuf -n 1 /etc/dictionaries-common/words | sed -r 's/[^a-zA-Z]//g' | awk '{print tolower($0)}')

	NEW_HOSTNAME=${1:-$RANDOM_HOSTNAME}

	echo "$NEW_HOSTNAME" > /etc/hostname
	sed -i 's/127.0.1.1.*/127.0.1.1\t'"$NEW_HOSTNAME"'/g' /etc/hosts

	echo " * $bl Starter hostname service $cf"
	systemctl start hostname 2>/dev/null
	to_sleep

	if [ -f "$HOME/.Xauthority" ] ; then
		su "$SUDO_USER" -c "xauth -n list | grep -v $CURRENT_HOSTNAME | cut -f1 -d\ | xargs -i xauth remove {}"
		su "$SUDO_USER" -c "xauth add $(xauth -n list | tail -1 | sed 's/^.*\//'$NEW_HOSTNAME'\//g')"
		echo " * X authority file updated"
	fi
	
	avahi-daemon --kill 2>/dev/null

	echo "$bl * PC navn endret til $NEW_HOSTNAME $gr"
}



# Check Tor configs
mac_change() {
	iface=$(ip addr show scope global | grep inet | awk '/noprefixroute/ {noprefixroute=$9} END {print noprefixroute}'
)
	gammelmac=$(cat /sys/class/net/$iface/address)
	sudo systemctl stop NetworkManager.service
	sudo macchanger -r "$iface"
	sudo systemctl start NetworkManager.service
	clear -x
	nymac=$(cat /sys/class/net/$iface/address)
        if [ "$nymac" = "$gammelmac" ]; then
        	clear -x
        	echo "$re Mac Adressen ble IKKE endret"
		echo ""
        	echo "Mac må endres for å kunne surfe annonymt $cf"


        else
                echo "$gr 	Vellykket! $cf"
                echo ""
                echo "$bl gammle Mac Addresse:"
                echo "$re 	$gammelmac $cf"
                echo "$bl Ny Mac Addresse:"
                echo "$gr 	$nymac $gr"
	fi
}


check_configs() {

	grep -q -x 'RUN_DAEMON="yes"' /etc/default/tor
	if [ $? -ne 0 ]; then
		echo "\n[!] Please add the following to your '/etc/default/tor' and restart the service:\n"
		echo ' RUN_DAEMON="yes"\n'
		exit 1
	fi

	grep -q -x 'VirtualAddrNetwork 10.192.0.0/10' /etc/tor/torrc
	VAR1=$?

	grep -q -x 'TransPort 9040' /etc/tor/torrc
	VAR2=$?

	grep -q -x 'DNSPort 9053' /etc/tor/torrc
	VAR3=$?

	grep -q -x 'AutomapHostsOnResolve 1' /etc/tor/torrc
	VAR4=$?

	if [ $VAR1 -ne 0 ] || [ $VAR2 -ne 0 ] || [ $VAR3 -ne 0 ] || [ $VAR4 -ne 0 ]; then
		echo "\n[!] Please add the following to your '/etc/tor/torrc' and restart service:\n"
		echo ' VirtualAddrNetwork 10.192.0.0/10'
		echo ' TransPort 9040'
		echo ' DNSPort 9053'
		echo ' AutomapHostsOnResolve 1\n'
		exit 1
	fi
}

# Check if this environment runs from a LiveCD or USB Stick
check_livecd() {
	grep -q -x 'backbox:x:999:999:Live session user,,,:/home/backbox:/bin/bash' /etc/passwd
	if [ $? -eq 0 ]; then
		echo " * Loading system_tor AppArmor profile into the kernel"
		apparmor_parser -r /etc/apparmor.d/system_tor -C
	fi
}

# Make sure that only root can run this script
check_root() {
	if [ "$(id -u)" -ne 0 ]; then
		echo "$re \n[!] Dette Scriptet må kjøres med root\n $cf" >&2
		exit 1
	fi
}

# Release DHCP address
clean_dhcp() {
	dhclient -r
	rm -f /var/lib/dhcp/dhclient*
	echo "$bl * DHCP adresse utgitt "
}

flush_iptables() {
	# Don't lock yourself out after the flush
	iptables -P INPUT ACCEPT
	iptables -P OUTPUT ACCEPT
	# flush iptables
	iptables -F
	iptables -t nat -F
	clear -x
	echo "$bl * Sletter alle iptables regler $gr"
}

# Kill processes at startup
kill_process() {
	if [ "$TO_KILL" != "" ]; then
		clear -x
		killall -q $TO_KILL
		clear -x
		echo "$bl\n * OK, fjernet prosesser! * $gr"
	fi
}

# BackBox implementation of Transparently Routing Traffic Through Tor
# https://trac.torproject.org/projects/tor/wiki/doc/TransparentProxy
redirect_to_tor() {
	
	echo

	if ! [ -f /etc/network/iptables.rules ]; then
		iptables-save > /etc/network/iptables.rules
		echo "$gr * Saved iptables rules"
	fi

	flush_iptables

	# nat .onion addresses
	iptables -t nat -A OUTPUT -d $VIRT_ADDR -p tcp -m tcp --tcp-flags FIN,SYN,RST,ACK SYN -j REDIRECT --to-ports $TRANS_PORT

	# nat dns requests to Tor
	iptables -t nat -A OUTPUT -d 127.0.0.1/32 -p udp -m udp --dport 53 -j REDIRECT --to-ports $DNS_PORT

	# don't nat the Tor process, the loopback, or the local network
	iptables -t nat -A OUTPUT -m owner --uid-owner $TOR_UID -j RETURN
	iptables -t nat -A OUTPUT -o lo -j RETURN

	for _lan in $NON_TOR; do
		iptables -t nat -A OUTPUT -d $_lan -j RETURN
	done

	for _iana in $RESV_IANA; do
		iptables -t nat -A OUTPUT -d $_iana -j RETURN
	done

	# redirect whatever fell thru to Tor's TransPort
	iptables -t nat -A OUTPUT -p tcp -m tcp --tcp-flags FIN,SYN,RST,ACK SYN -j REDIRECT --to-ports $TRANS_PORT

	# *filter INPUT
	iptables -A INPUT -m state --state ESTABLISHED -j ACCEPT
	iptables -A INPUT -i lo -j ACCEPT

	iptables -A INPUT -j DROP

	# *filter FORWARD
	iptables -A FORWARD -j DROP

	# *filter OUTPUT
	iptables -A OUTPUT -m state --state INVALID -j DROP

	iptables -A OUTPUT -m state --state ESTABLISHED -j ACCEPT

	# allow Tor process output
	iptables -A OUTPUT -m owner --uid-owner $TOR_UID -p tcp -m tcp --tcp-flags FIN,SYN,RST,ACK SYN -m state --state NEW -j ACCEPT

	# allow loopback output
	iptables -A OUTPUT -d 127.0.0.1/32 -o lo -j ACCEPT

	# tor transproxy magic
	iptables -A OUTPUT -d 127.0.0.1/32 -p tcp -m tcp --dport $TRANS_PORT --tcp-flags FIN,SYN,RST,ACK SYN -j ACCEPT

	# allow access to lan hosts in $NON_TOR
	for _lan in $NON_TOR; do
		iptables -A OUTPUT -d $_lan -j ACCEPT
	done

	# Log & Drop everything else.
	iptables -A OUTPUT -j LOG --log-prefix "Dropped OUTPUT packet: " --log-level 7 --log-uid
	iptables -A OUTPUT -j DROP

	# Set default policies to DROP
	iptables -P INPUT DROP
	iptables -P FORWARD DROP
	iptables -P OUTPUT DROP
}

# BleachBit cleaners to delete unnecessary files to preserve anonymity
run_bleachbit() {
	if [ "$OVERWRITE" = "true" ] ; then
		echo -n "\n * Skriver over unødvendige filer... "
		bleachbit -o -c $BLEACHBIT_CLEANERS >/dev/null
		clear -x
	else
		echo -n "\n * Sletter unødvendige filer BARE... "
		bleachbit -c $BLEACHBIT_CLEANERS >/dev/null
		clear -x
	fi

}

to_sleep() {
	sleep 3
}

warning() {
	echo "
$re###########################################################################	
$re#                         $re[!] ADVARSEL!                                   $re#
$re#    								          $re#
$re#$cy [i] dette scriptet er for å forhindre mest vanlige system lekasjer      $re#
$re#$cy    Hvordan maskinen blir brukt er nøkkelen til din                      $re#
$re#$cy    Sikkerhet og Annonymitet.                                            $re#
$re#								          $re#
$re#$cy [i] om nødvendig, endre /etc/default/ko-anonym med egene values.        $re#
$re#$cy                    denne er tilpasset Ubuntu                            $re#
$re#                                                                         $re#
$re###########################################################################
"
}

do_start() {
	check_configs
	check_root
	
	warning

	echo "$bl\n[i] Starter Anonym Modus $gr"
	
	if ask "vil du fjerne aktive prossesser for å forhindre lekasjer?" Y; then
		kill_process
		
	else
		clear -x
		echo "$re prosesser er IKKE fjernet! $gr"
	fi

	check_livecd

	
	if ask "vil du kjøre all trafikk gjennom tor??" Y; then
		redirect_to_tor
	else
		clear -x
		echo "$re trafikk blir IKKE kjørt gjennom tor $gr"
	fi
	
	if ask "vil du endre mac adressen??" Y; then
		mac_change
	else
		clear -x
		echo ""
		echo "$re MAC BLE IKKE ENDRET!!!!"
		echo ""
		echo "$re VIKTIG at mac adressen oppdateres før"
		echo "start og stopp av anonym $gr"
	fi


	
	if ask "vil du endre Computer Navn?" Y; then
		
		echo ""
		read -p "Enter for å tilfeldig navn, eller skriv inn nytt navn > " CHOICE
		clear -x
		echo -n "$bl \n * Stopper NetworkManager service"
		systemctl stop NetworkManager.service 2>/dev/null
		to_sleep

		if [ "$CHOICE" = "" ]; then
			change_hostname
		else
			change_hostname "$CHOICE"
		fi

	
	if ask "vil du at all trafikk skal gå igjennom Tor?" Y; then
		redirect_to_tor
		clear -x
		echo ""
	else
		echo
	fi
		
		echo "$bl * Starter NetworkManager service $cf"
		systemctl start NetworkManager.service 2>/dev/null
		to_sleep
	else
		echo
	fi

	echo "$bl * Restarter tor service $cf"
	systemctl restart tor 2>/dev/null
	to_sleep
	clear -x
	echo "$gr * Fullført! *$cf"
	echo
	
	if [ ! -e /var/run/tor/tor.pid ]; then
		echo "$re \n[!] Tor kjører IKKE! Quitting...\n $cf"
		exit 1
	fi
}

do_stop() {

	check_root

	echo "$bl \n[i] Stopper anonym modus $gr"
	
	if ask "vil du slette alle aktive prosesser for å forhindre lekasje??" Y; then
		kill_process
	else
		echo
	fi
	
	flush_iptables

	if [ -f /etc/network/iptables.rules ]; then
		iptables-restore < /etc/network/iptables.rules
		rm /etc/network/iptables.rules
		echo "$bl * Restored iptables rules "
	fi

	mac_change
	if ask "vil du endre Computer Navn?" Y; then
		read -p "skriv inn nytt Navn eller ENTER for standard [$REAL_HOSTNAME] > " CHOICE
		
		clear -x
		echo -n "$bl \n * Stopper NetworkManager service"
		systemctl stop NetworkManager.service 2>/dev/null
		to_sleep

		if [ "$CHOICE" = "" ]; then
			change_hostname $REAL_HOSTNAME
		else
			change_hostname "$CHOICE"
		fi

		echo "$bl * Starter NetworkManager service $gr"
		systemctl start NetworkManager.service 2>/dev/null
		to_sleep
	fi
	
	if [ "$DISPLAY" ]; then
		if ask "Slett unødvendige filer for sikkerhet?" Y; then
			run_bleachbit
			clear -x
			echo "$gr * Fullført! *$cf"
		else
			clear -x
			echo "$gr * Fullført! *$cf"
		fi
		
	fi

	echo
}

do_status() {

	echo "$cy \n[i] Viser anonym status\n $cf"
	interfaces=$(ip addr show scope global | grep inet | awk '/noprefixroute/ {noprefixroute=$9} END {print noprefixroute}'
)
	ifconfig -a | grep "encap:$interfaces" | awk '{print " * " $1, $5}'

	CURRENT_HOSTNAME=$(hostname)
	echo "$bl * Hostname $gr $CURRENT_HOSTNAME $cf"
	
	HTML=$(curl -s https://check.torproject.org/?lang=en_US)
	IP=$(echo "$HTML" | egrep -m1 -o '[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}')

	echo "$HTML" | grep -q "Congratulations. This browser is configured to use Tor."

	if [ $? -ne 0 ]; then
		echo "$re * IP $IP $cf"
		echo "$re * Tor er AV\n$cf"
		exit 3
	else
		echo "$bl * IP $gr $IP"
		echo "$bl * Tor er $gr PÅ\n$cf"
	fi
}

do_update() {

	echo "\n[i] Updating ...\n"
	git clone https://github.com/ubunknown1/ko-anonym
	cd ko-anonym
	sh setup.sh
	cd ..
	rm -rf ko-anonym
	echo "Updated!"

}


case "$1" in
	start)
		do_start
	;;
	stop)
		do_stop
	;;
	status)
		do_status
	;;
	update)
		do_update
	;;
	*)
		echo "Bruk: sudo $0 {start|stop|status|update}" >&2
		exit 3
	;;
esac

exit 0
